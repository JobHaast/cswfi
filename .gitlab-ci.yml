#
# GitLab example CI/CD script
# See https://docs.gitlab.com/ee/ci/yaml/README.html
#
# Secure Variables like $DB_PASSWORD can added by going to your
# project’s Settings ➔ CI / CD ➔ Variables on the GitLab website.
#
image: node:latest

stages:
  - test
  - deploy

# cache:
#   key: $CI_COMMIT_REF_SLUG
#   paths:
#     - node_modules/

#
# Global variables
#
variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

#
# Run unittests
#
unittests:
  image: zenika/alpine-chrome:86-with-node-12
  stage: test
  variables:
    NODE_ENV: development
  before_script:
    - npm install --no-optional
  script:
    - npm run test

#
# Run end-to-end tests
#
end2end:
  image: volterrasystem/angular-e2e-testing:node12
  stage: test
  variables:
    NODE_ENV: development
  before_script:
    - npm install --no-optional
  script:
    - google-chrome --version
    - node ./node_modules/protractor/bin/webdriver-manager update --versions.chrome=85.0.4183.102
    - npm run e2e --webdriver-update=false

#
# Deploy to Heroku
# DPL is a deploy tool made for continuous deployment that’s developed and used
# by Travis CI, but can also be used with GitLab CI.
# https://docs.gitlab.com/ee/ci/examples/deployment/#using-dpl-with-docker
#
production:
  type: deploy
  stage: deploy
  image: ruby:latest
  script:
    # Get your key at https://dashboard.heroku.com/account
    # and add it to your project environment variables at GitLab.
    - echo "Heroku api key = $HEROKU_API_KEY"
    # The name of your app at Heroku. See https://dashboard.heroku.com/apps.
    - echo "Heroku appname = $HEROKU_APP_NAME"
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  only:
    - master
